<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!--Tx 어드바이저를 이용한 자동 프록시 생성기 
    : 등록된 bean중에서 advisor 인터페이스를 구현한 것을 모두 찾는다.
    그리고 생성되는 모든 빈에 대해 어드바이저의 포인트것을 적용해보면서 프록시 적용
    대상을 찾는다.빈 클래스가 프로시 선정대상이면 프로시를 만들어 원래 빈오브잭트와 바꿔
    치기한다.
    -->
    <beans:bean 
 	class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- FileDownload:소스코딩 필요 -->
    <beans:bean id="downloadView" class="com.sist.retail.common.DownloadView"/>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/" />
		<beans:property name="suffix" value=".jsp" />
	    <beans:property name="order" value="1" />
    </beans:bean>
    
    <!-- Tiles viewResolver -->
    <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
    		<beans:property name="order" value="0"/>
    </beans:bean>
    
    <!-- Tiles viewConfiguer -->
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    	<beans:property name="definitions">
    		<beans:list>
    			<beans:value>/WEB-INF/views/tiles/tiles.xml</beans:value>
    		</beans:list>
    	</beans:property>
    </beans:bean>
	
	<context:component-scan base-package="com.sist.retail" />
	
</beans:beans>
